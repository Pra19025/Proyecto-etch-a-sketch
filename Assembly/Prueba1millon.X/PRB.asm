
#include "p16f887.inc"

; CONFIG1
; __config 0xE0D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
;interrupcion del timer 0 para controlar los displays
 
;constantes	
 VALOR_TMR0	EQU .6
 VARIA UDATA
;------------------------ DATOS O VISUALIZACION DE DATOS-----------------------------------------------
 CONTADOR RES	1
MUX	RES	1
X_LOW	RES	1  
X_MID	RES	1
X_HIGH	RES	1
Y_LOW	RES	1
Y_MID	RES	1
Y_HIGH	RES	1 
ADC_C0	RES	1
ADC_C1	RES	1
PIXEL_X_LOW RES	1 
PIXEL_X_MID RES	1 
 PIXEL_X_HIGH RES    1 
PIXEL_Y_LOW RES	1 
PIXEL_Y_MID RES	1
PIXEL_Y_HIGH RES    1 

 FLAGS	RES	1 ;BIT 0: SI SE LEYO UNA COMA
		   ;BIT 1: SI SE LEYO UN CARACTER NULO

 VALOR_BIN  RES 1
 VALOR_DECENAS RES 1
 VALOR_CENTENAS RES 1
 VALOR_UNIDADES RES 1
;VARIABLES USADAS AL RECIBIR LOS DATOS
 DATO1 RES 1
 DATO2 RES 1
 DATO3 RES 1
 CONTADOR_RECEIVER RES 1
 DATOAUX RES 1 ;VALOR EN DONDE SE ALMACENA EL DATO AUXILIAR
 
 STATUS_RAM  RES	1
W_RAM	RES 1	
RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

INTER CODE 0x0004
 SAVE:
    MOVWF   W_RAM
    SWAPF   STATUS,W
    MOVWF   STATUS_RAM
ISR:
    BTFSC INTCON,2  ;INTERRUPCION DEL TIMER 0
    GOTO    INT_TMR0
    BTFSC   PIR1,6 ;INTERRUPCION DEL ADC
    GOTO    INT_ADC
    BTFSC   PIR1,5   ;INTERRUPCION EUSART RECEIVER
    GOTO    INT_RC
    
INT_TMR0: ;MULTIPLEXACION DE LOS DISPLAYS
    BCF	INTCON,2
    MOVLW   VALOR_TMR0
    MOVWF   TMR0
    CALL MOSTRAR_DATOS
    INCF    MUX,F
    GOTO LOAD
INT_ADC:
    BCF	PIR1,6 ;SE LIMPIA LA BANDERA
    MOVF    ADRESH,W
    
    BTFSS   ADCON0,2 ;SI ESTE BIT ES CERO SE ESTABA LEYENDO EL CANAL 3
    GOTO LECTURA_C1
    
    MOVWF ADC_C1
    BCF	ADCON0,2 ;SE CAMBIA AL CANAL 1
    GOTO    FINAL
    
    LECTURA_C1
    MOVWF   ADC_C0
    BSF	ADCON0,2 ;SE CAMBIA AL CANAL 0
    
    FINAL
    NOP
    NOP
    NOP
    NOP
    NOP ;REQUERIMIENTOS DE ADQUISICION
    BSF	ADCON0,1 ;INICIA LA CONVERSION
    GOTO LOAD
INT_RC:
    MOVF    RCREG,W
    MOVWF   DATOAUX
    ;AQUI SE VERIFICA A QUE DATO CORRESPONDE
    MOVLW   .44 ;SE VERIFICA SI ES UNA COMA
    SUBWF   DATOAUX,W ;SI DA CERO ES QUE SE RECIBIO UNA COMA
    BTFSS   STATUS,2 ;BIT Z SI LO ANTERIOR DA CERO ES QUE SE LEYO UNA COMA
    GOTO    VER_Y
    
    ;SE LE LEYO UNA COMA SE EJECUTA ESTO
    CLRF    CONTADOR_RECEIVER
    MOVF    DATO1,W
    MOVWF  PIXEL_X_HIGH
    MOVF   DATO2,W
    MOVWF   PIXEL_X_MID
    MOVF    DATO3,W
    MOVWF   PIXEL_X_LOW
    GOTO LOAD ;SE SALE DE LA INTERRUPCION
    
    VER_Y
    MOVLW   .0
    SUBWF   DATOAUX,W
    BTFSS   STATUS,2 ;SI DA CERO, SE ENVIO EL CARACTER NULO, QUE INDICA QUE LOS VALORES ANTERIORES ERAN LOS CORRESPONDIENTES A Y
    GOTO    GUARDAR_COORDENADAS
    ;SE GUARDAN LOS VALORES DE Y
    CLRF    CONTADOR_RECEIVER
    MOVF    DATO1,W
    MOVWF  PIXEL_Y_HIGH
    MOVF   DATO2,W
    MOVWF  PIXEL_Y_MID
    MOVF    DATO3,W
    MOVWF  PIXEL_Y_LOW
    GOTO LOAD
    ;SE VAN GUARDANDO LOS DATOS
    GUARDAR_COORDENADAS
    MOVF    CONTADOR_RECEIVER,W
    ADDWF   PCL,F 
    GOTO VALOR1
    GOTO VALOR2
    GOTO VALOR3
    CLRF    CONTADOR_RECEIVER
    VALOR1
    MOVLW   .48
    SUBWF   DATOAUX,W
    MOVWF   DATO1
    INCF    CONTADOR_RECEIVER,F
    GOTO LOAD	
    VALOR2
    MOVLW   .48
    SUBWF   DATOAUX,W
    MOVWF   DATO2
    INCF    CONTADOR_RECEIVER,F
    GOTO LOAD	
    VALOR3
    MOVLW   .48
    SUBWF   DATOAUX,W
    MOVWF   DATO3
    INCF    CONTADOR_RECEIVER,F
   
    
    
LOAD:
    SWAPF   STATUS_RAM,W
    MOVWF   STATUS
    SWAPF   W_RAM,F
    SWAPF   W_RAM,W
    RETFIE
    
 
TABLA:
    ANDLW   B'00001111' ;MASCARA
    ADDWF   PCL,F
     RETLW   B'01110111'	;0
    RETLW   B'01000010'	;1
    RETLW   B'01101101'	;2
    RETLW   B'01101011'	;3
    RETLW   B'01011010'	;4
    RETLW   B'00111011'	;5
    RETLW   B'00111111'	;6
    RETLW   B'01100010'	;7
    RETLW   B'01111111'	;8
    RETLW   B'01111011'	;9
    RETLW   B'01111110'	;A
    RETLW   B'00011111'	;B
    RETLW   B'00110101'	;C
    RETLW   B'01001111'	;D
    RETLW   B'00111101'	;E
    RETLW   B'00111100'	;F
    RETURN
    
 MOSTRAR_DATOS:
    CLRF    PORTB
    MOVF    MUX, W
    ADDWF PCL,F
    GOTO PRIMERO
    GOTO SEGUNDO
    GOTO TERCERO
    GOTO CUARTO
    GOTO QUINTO
    GOTO SEXTO
    CLRF   MUX
    ;AQUI SE HACE LA MULTIPLEXACION DE LOS DISPLAYS
    PRIMERO
    MOVF   PIXEL_Y_LOW,W
    CALL    TABLA
    MOVWF   PORTD
    BSF	PORTB,5
    RETURN
    
    SEGUNDO
    MOVF   PIXEL_Y_MID,W
    CALL  TABLA
    MOVWF   PORTD
    BSF	PORTB,4
    RETURN
    
    TERCERO
    MOVF    PIXEL_Y_HIGH,W
    CALL TABLA
    MOVWF   PORTD
    BSF	PORTB,3
    RETURN
    
    CUARTO
    MOVF    PIXEL_X_LOW,W
    CALL TABLA
    MOVWF   PORTD
    BSF	PORTB,2
    RETURN
    
    QUINTO
    MOVF    PIXEL_X_MID,W
    CALL TABLA
    MOVWF   PORTD
    BSF	PORTB,1
    RETURN
    
    SEXTO
    MOVF    PIXEL_X_HIGH,W
    CALL TABLA
    MOVWF   PORTD
    BSF	PORTB,0
    RETURN
    
MAIN_PROG CODE                      ; let linker place main program

START
    BSF	STATUS,6
    BSF	STATUS,5 ;BANCO 3
    
    CLRF    ANSELH ;PUERTO B COMO SALIDA DIGITAL
    MOVLW   .255
    MOVWF   ANSEL ;PUERTO A Y E COMO ENTRADA DIGITAL
    
    BCF	STATUS,6 ;BANCO 1
    
    MOVLW   .255
    MOVWF   TRISA
    CLRF    TRISB
    CLRF    TRISD
    
    MOVLW   B'10000001' ; EN LO QUE INTERESA, EL PRESCALER DEL TMR 0 SE COLOCA EN 1:4 Y LA FUENTE ES EL OSCILADOR INTERNO
    MOVWF   OPTION_REG ;
    
    MOVLW   B'11100000' ;INTERRUPCIONES GLOBALES, PERIFERICAS ACTIVADAS, TMR0 INT ACTIVADA
    MOVWF   INTCON
    
    BSF	PIE1,6 ;INTERRUPCION DEL ADC ACTIVADA
    BSF	PIE1,5 ;INTERRUPCION EUSART RECEIVER ACTIVADA
    
    BCF	TXSTA,6 ;TRANSMISION DE 8 BITS
    BSF	TXSTA,5 ;TRANSMISION ACTIVADA
    BCF	TXSTA,4 ;MODO ASINCRONO
    BSF	TXSTA,2 ;BAUD RATE DE ALTA VELOCIDAD
    
    MOVLW   .25
    MOVWF   SPBRG ;BAUD RATE DE 9615
    
    BCF	ADCON1,7 ;JUSTIFICADO A LA DERECHA
    BCF	ADCON1,5 ; V++ COMO VCC
    BCF	ADCON1,4   ;V-- COMO VDD
    
    BCF	STATUS,5 ;BANCO 0
    
    MOVLW   B'01000001' ;FOSC/8 CANAL AN0  Y SE ENCIENDE
    MOVWF   ADCON0
    
    MOVLW   VALOR_TMR0
    MOVWF   TMR0    
    
    BSF	RCSTA,7 ;SE CONFIGURA EL PUERTO SERIAL
    BCF	RCSTA,6 ;RECEPCION DE 8 BITS
    BSF	RCSTA,4 ;RECEPCION CONTINUA
    
    BSF	ADCON0,1 ;INICIA LA CONVERSION DEL ADC
   CLRF	PIXEL_X_LOW
   CLRF	PIXEL_X_MID
   CLRF	PIXEL_X_HIGH
   CLRF	PIXEL_Y_LOW
   CLRF	PIXEL_Y_MID
   CLRF	PIXEL_Y_HIGH
   CLRF	MUX
   CLRF	ADC_C1
   CLRF	ADC_C0
   CLRF	CONTADOR
   CLRF	CONTADOR_RECEIVER
   CLRF	DATO1
   CLRF	DATO2
   CLRF	DATO3
   
LOOP:
    MOVF    ADC_C0,W
    MOVWF   VALOR_BIN
    CALL    CONVERTIR_BIN_TO_BCD
    MOVF    VALOR_CENTENAS,W
    MOVWF   X_HIGH
    
    MOVF    VALOR_DECENAS,W
    MOVWF   X_MID
    
    MOVF    VALOR_UNIDADES,W
    MOVWF   X_LOW
    
    MOVF    ADC_C1,W
    MOVWF   VALOR_BIN
    CALL    CONVERTIR_BIN_TO_BCD
    
    MOVF    VALOR_CENTENAS,W
    MOVWF   Y_HIGH
    
    MOVF    VALOR_DECENAS,W
    MOVWF   Y_MID
    
    MOVF    VALOR_UNIDADES,W
    MOVWF   Y_LOW
    
    CALL ENVIAR_DATOS
    
    GOTO LOOP
    
ENVIAR_DATOS:
    BTFSS   PIR1,4 ;SI NO ESTA OCUPADO SE SALTA EL RETURN
    RETURN
   
    ;----- SE DETERMINA QUE DATO HAY QUE ENVIAR -------------------------------
    MOVF    CONTADOR,W
   ADDWF   PCL,F
    GOTO    UNO
    GOTO    DOS
    GOTO    TRES
    GOTO    CUATRO
    GOTO    CINCO
    GOTO    SEIS
    GOTO    SIETE
    GOTO    OCHO
    CLRF    CONTADOR
    UNO
    MOVF    X_HIGH,W
    GOTO ENVIAR
    DOS
     MOVF    X_MID,W
    GOTO ENVIAR
    TRES
    MOVF    X_LOW,W 
    GOTO ENVIAR
    CUATRO
    MOVLW    .44 ; COMA EN ASCII
    GOTO ENVIAR_SIN_SUMA
    CINCO
    MOVF    Y_HIGH,W
    GOTO ENVIAR
    SEIS
    MOVF    Y_MID,W
    GOTO ENVIAR
    SIETE
     MOVF    Y_LOW,W
    GOTO ENVIAR
    OCHO
    MOVLW   .10 ;NUEVA LINEA
    GOTO ENVIAR_SIN_SUMA
    ENVIAR
    ADDLW   .48 ;SE PASA DE BCD A ASCII
    ENVIAR_SIN_SUMA
    MOVWF   TXREG
    INCF    CONTADOR,F
    RETURN
    
    
CONVERTIR_BIN_TO_BCD:
    CLRF    VALOR_CENTENAS
    CLRF    VALOR_DECENAS
    CLRF    VALOR_UNIDADES
    ;PRIMERO SE INICIA CON LAS CENTENAS
    CENTENAS
    MOVLW   .100
    SUBWF   VALOR_BIN,W    ;EN EL FSR SE COLOCA LA DIRECCION DEL VALOR A CONVERTIR
    BTFSS   STATUS, C	; SI EL BIT C ES 1 QUIERE DECIR QUE INDF >= W 
    GOTO    DECENAS ;SI EL BIT ES CERO ES EJECUTA ESTO, LO QUE QUIERE DECIR QUE YA EL NUMEOR EN INDF
    ;ES MENOR O IGUAL A 100
    
    INCF    VALOR_CENTENAS,F
    MOVWF   VALOR_BIN
    GOTO CENTENAS ;VUELVE A RESTAR
    
    
    DECENAS
    MOVLW   .10
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C  ;LO MISMO QUE CON CENTENAS 
    GOTO UNIDADES
    
    INCF    VALOR_DECENAS,F
    MOVWF   VALOR_BIN
    GOTO DECENAS
    
    UNIDADES
    MOVLW .1
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C ;MISMA LOGICA QUE ANTERIORMENTE
    RETURN
    
    INCF    VALOR_UNIDADES,F
    MOVWF VALOR_BIN
    GOTO UNIDADES
    
    END